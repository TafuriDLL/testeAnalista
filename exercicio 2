CREATE OR REPLACE PROCEDURE OBTENHA_DETALHES_FUNCIONARIO(
    P_ID_FUNCIONARIO IN FUNCIONARIOS.ID%TYPE,
    P_NOME OUT VARCHAR2,
    P_PROJETOS OUT SYS_REFCURSOR,
    P_HORAS_TOTAL OUT NUMBER
) AS
BEGIN
    -- OBTER O NOME DO FUNCIONÁRIO
    SELECT NOME INTO P_NOME
    FROM FUNCIONARIOS
    WHERE ID = P_ID_FUNCIONARIO;
    
    -- OBTER A LISTA DE PROJETOS NOS QUAIS O FUNCIONÁRIO TRABALHOU
    OPEN P_PROJETOS FOR
    SELECT PRO.NOME AS PROJETO
    FROM PROJETOS PRO
    JOIN HORASTRABALHADAS HT ON PRO.ID = HT.PROJETOID
    WHERE HT.FUNCIONARIOID = P_ID_FUNCIONARIO;
    
    -- OBTER A SOMA TOTAL DE HORAS TRABALHADAS
    SELECT NVL(SUM(HT.HORAS), 0) INTO P_HORAS_TOTAL
    FROM HORASTRABALHADAS HT
    WHERE HT.FUNCIONARIOID = P_ID_FUNCIONARIO;
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        P_NOME := NULL;
        P_HORAS_TOTAL := 0;
        OPEN P_PROJETOS FOR SELECT 'NENHUM PROJETO ENCONTRADO' AS PROJETO FROM DUAL;
    WHEN OTHERS THEN
        -- TRATAR OUTROS POSSÍVEIS ERROS
        RAISE;
END OBTENHA_DETALHES_FUNCIONARIO;
/


BLOCO DE CHAMADA 

DECLARE
    V_NOME VARCHAR2(100);
    V_PROJETOS SYS_REFCURSOR;
    V_PROJETO VARCHAR2(100);
    V_HORAS_TOTAL NUMBER;
BEGIN
    -- CHAMAR O PROCEDIMENTO
    OBTENHA_DETALHES_FUNCIONARIO(
        P_ID_FUNCIONARIO => 1,  -- SUBSTITUA PELO ID DO FUNCIONÁRIO DESEJADO
        P_NOME => V_NOME,
        P_PROJETOS => V_PROJETOS,
        P_HORAS_TOTAL => V_HORAS_TOTAL
    );
    
    -- EXIBIR O NOME DO FUNCIONÁRIO
    DBMS_OUTPUT.PUT_LINE('NOME: ' || V_NOME);
    
    -- EXIBIR A SOMA TOTAL DE HORAS
    DBMS_OUTPUT.PUT_LINE('HORAS TOTAIS: ' || V_HORAS_TOTAL);
    
    -- EXIBIR A LISTA DE PROJETOS
    DBMS_OUTPUT.PUT_LINE('PROJETOS:');
    LOOP
        FETCH V_PROJETOS INTO V_PROJETO;
        EXIT WHEN V_PROJETOS%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('  ' || V_PROJETO);
    END LOOP;
    
    CLOSE V_PROJETOS;
END;
/
